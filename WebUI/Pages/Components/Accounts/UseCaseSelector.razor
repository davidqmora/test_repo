@using System.Text.Json
@using System.ComponentModel
<MudStack>
    <MudRadioGroup T="string" 
                   Value="UserType"
                   ValueChanged="@UserTypeChanged">
        <MudRadio Value="@("enabled")">Enabled</MudRadio>
        <MudRadio Value="@("not_enabled")">Not Enabled</MudRadio>
        <MudRadio Value="@("partially_enabled")">Partially Enabled</MudRadio>
    </MudRadioGroup>
    <MudForm Disabled="@(UserType != "partially_enabled")">
        <MudCheckBox T="bool"
                     Label="Social Handle"
                     Value="@(missingProperties["social_handle"])"
                     ValueChanged="@(isChecked => PropertyValueChanged("social_handle" ,isChecked))"/>
        <MudCheckBox T="bool"
                     Label="Preferred Email"
                     Value="@(missingProperties["preferred_email"])"
                     ValueChanged="@(isChecked => PropertyValueChanged("preferred_email" ,isChecked))"/>
        <MudCheckBox T="bool"
                     Label="Country Region"
                     Value="@(missingProperties["country_region"])"
                     ValueChanged="@(isChecked => PropertyValueChanged("country_region" ,isChecked))"/>
        <MudCheckBox T="bool"
                     Label="Age Of Indemnity"
                     Value="@(missingProperties["age_indemnity"])"
                     ValueChanged="@(isChecked => PropertyValueChanged("age_indemnity" ,isChecked))"/>
        <MudCheckBox T="bool"
                     Label="Terms Of Use"
                     Value="@(missingProperties["terms_of_use"])"
                     ValueChanged="@(isChecked => PropertyValueChanged("terms_of_use" ,isChecked))"/>
    </MudForm>
    <MudNumericField T="int?" 
                     Label="Email Count"
                     Value="@emailCount"
                     Disabled="@(UserType == "enabled" || 
                                 (UserType != "not_enabled" && missingProperties["preferred_email"] == false))"
                     ValueChanged="EmailCountChanged"/>
</MudStack>


@inject IUserAccountService UserAccountService
@code {
    private string UserType { get; set; } = "enabled";

    private Dictionary<string, bool> missingProperties = new()
    {
        { "social_handle", true },
        { "preferred_email", true },
        { "country_region", true },
        { "age_indemnity", true },
        { "terms_of_use", true }
    };

    private int? emailCount;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        SaveQuery();
    }

    private void SaveQuery()
    {
        var query = $"user_type={UserType}";

        if (UserType != "enabled")
        {
            query += $"&social_handle={missingProperties["social_handle"]}" +
                     $"&preferred_email={missingProperties["preferred_email"]}" +
                     $"&country_region={missingProperties["country_region"]}" +
                     $"&age_indemnity={missingProperties["age_indemnity"]}" +
                     $"&terms_of_use={missingProperties["terms_of_use"]}";

            if (emailCount is not null)
            {
                query += $"&email_count={emailCount}";
            }
        }

        ((UserAccountServiceDev)UserAccountService).AccountStatusQuery = query;
    }

    private void PropertyValueChanged(string name, bool isChecked)
    {
        missingProperties[name] = isChecked;
        SaveQuery();
    }

    private void EmailCountChanged(int? newCount)
    {
        emailCount = newCount;
        SaveQuery();
    }

    private void UserTypeChanged(string newType)
    {
        UserType = newType;
        SaveQuery();
    }
}