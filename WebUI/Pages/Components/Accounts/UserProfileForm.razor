@using WebUI.Model
@using Microsoft.Identity.Web
<MudForm>

    @if (AccountStatus?.RequiredProperties is { PreferredEmail: true })
    {
        <MudSelect T="string"
                   @bind-Value="@userProfile.PreferredEmail"
                   Label="Preferred Email"
                   Required="true"
                   RequiredError="Preferred Email is required.">
            @if (AccountStatus?.AvailableEmails != null)
            {
                foreach (var email in AccountStatus.AvailableEmails)
                {
                    <MudSelectItem Value="@email">@email</MudSelectItem>        
                }
            }
        </MudSelect>
    }
    @if (AccountStatus?.RequiredProperties is { SocialHandle: true })
    {
        <MudTextField T="string"
                      @bind-Value="@userProfile.SocialHandle"
                      Label="Social Handle"
                      Required="true"
                      RequiredError="Social Handle is required."/>
    }
    @if (AccountStatus?.RequiredProperties is { CountryOrRegion: true })
    {
        <MudTextField T="string"
                      @bind-Value="@userProfile.CountryOrRegion"
                      Label="Country/Region"
                      Required="true"
                      RequiredError="Country Or Region is required."/>
    }
    @if (AccountStatus?.RequiredProperties is { AgeOfIndemnity: true })
    {
        <MudCheckBox Label="Age Of Indemnity"
                     T="bool"
                     @ref="@aoiControl"
                     Required="true"
                     RequiredError="Age Of Indemnity is required."
                     ValueChanged="HandleAgeOfIndemnityClick"/>
    }
    @if (AccountStatus?.RequiredProperties is { TermsOfUseAgreement: true })
    {
        <MudCheckBox Label="Terms Of Use Agreement"
                     T="bool"
                     @ref="touControl"
                     Required="true"
                     RequiredError="Terms Of Use Agreement is required."
                     ValueChanged="@HandleTouClick"/>
        <MudButton Variant="Variant.Text"
                   Color="Color.Primary"
                   OnClick="@SeeTermsOfUse">
            See Terms
        </MudButton>
    }

    <MudStack Row
              Spacing="4"
              Class="mt-4">
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   DisableElevation="true"
                   OnClick="@HandleSubmit">
            Submit
        </MudButton>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Secondary"
                   DisableElevation="true"
                   OnClick="@HandleReset">
            Reset
        </MudButton>
    </MudStack>
</MudForm>


@inject IAccountApiService AccountApiService
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

@code {
    [Parameter] public AccountStatus? AccountStatus { get; set; }

    [Parameter] public EventCallback OnTouRequested { get; set; }
    [Parameter] public EventCallback<UserProfile> OnPropertiesSubmitted { get; set; }

    private UserProfile userProfile = new();

    private MudCheckBox<bool>? touControl;
    private MudCheckBox<bool>? aoiControl;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (AccountStatus?.AvailableEmails?.Count == 1)
        {
            userProfile.PreferredEmail = AccountStatus!.AvailableEmails[0];
        }
    }


    [AuthorizeForScopes(ScopeKeySection = "AccountsApi:ApiWriterScope")]
    private void HandleSubmit()
    {
        OnPropertiesSubmitted.InvokeAsync(userProfile);
    }

    private void HandleReset()
    {
        userProfile = new UserProfile();
        if (touControl != null)
        {
            touControl.Value = false;
        }
    }

    private void HandleTouClick(bool isChecked)
    {
        userProfile.TermsOfUseAgreement = isChecked ? DateTime.Now : null;
    }

    private void SeeTermsOfUse()
    {
        OnTouRequested.InvokeAsync();
    }

    private void HandleAgeOfIndemnityClick(bool isChecked)
    {
        userProfile.AgeOfIndemnity = isChecked ? true : null;
    }

}